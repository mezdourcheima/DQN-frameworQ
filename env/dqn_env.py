# """CHANGE CUSTOM ENV IMPORT HERE""" ##################################################################################
from .custom_env import RES
########################################################################################################################


class DqnEnv:

    def min_max_scale(self, x, feature):
        return (x - self.min_max[feature][0]) / (self.min_max[feature][1] - self.min_max[feature][0])

    def __init__(self, m, p=None):
        self.mode = {"train": False, "observe": False, "play": False, m: True}
        self.player = p if self.mode["play"] else None

        # """CHANGE ENV CONSTRUCT HERE""" ##############################################################################
        ################################################################################################################

        # """CHANGE FEATURE SCALING HERE""" ############################################################################
        self.min_max = {
            "obs": (0., 1.),
            "rew": (0., 1.)
        }
        ################################################################################################################

        # """CHANGE ACTION AND OBSERVATION SPACE SIZES HERE""" #########################################################
        self.action_space_n = 1
        self.observation_space_n = 1
        ################################################################################################################

    def obs(self):
        # """CHANGE OBSERVATION HERE""" ################################################################################
        obs = [self.min_max_scale(x, "obs") for x in [1.]]
        ################################################################################################################
        return obs

    def rew(self):
        # """CHANGE REWARD HERE""" #####################################################################################
        rew = self.min_max_scale(0, "rew")
        ################################################################################################################
        return rew

    def done(self):
        # """CHANGE DONE HERE""" #######################################################################################
        done = False
        ################################################################################################################
        return done

    def info(self):
        # """CHANGE INFO HERE""" #######################################################################################
        info = {}
        ################################################################################################################
        return info

    def reset(self):
        # """CHANGE RESET HERE""" ######################################################################################
        pass
        ################################################################################################################

    def step(self, action):
        # """CHANGE STEP HERE""" #######################################################################################
        pass
        ################################################################################################################

    def reset_render(self):
        # """CHANGE RESET RENDER HERE""" ###############################################################################
        pass
        ################################################################################################################

    def step_render(self):
        # """CHANGE STEP RENDER HERE""" ################################################################################
        pass
        ################################################################################################################
